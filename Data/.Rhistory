kw_2019 = sum(kw_2019, na.rm = TRUE),
kw_2020 = sum(kw_2020, na.rm = TRUE),
kw_2021 = sum(kw_2021, na.rm = TRUE),
kw_2022 = sum(kw_2022, na.rm = TRUE)
) %>%
mutate(kw_tot =
kw_b2005+
kw_2005 +
kw_2006 +
kw_2007 +
kw_2008 +
kw_2009 +
kw_2010 +
kw_2011 +
kw_2012 +
kw_2013 +
kw_2014 +
kw_2015 +
kw_2016 +
kw_2017 +
kw_2018 +
kw_2019 +
kw_2020 +
kw_2021 +
kw_2022) %>%
st_drop_geometry()
cantons_kw_installed <- left_join(cantons, cantons_kw_installed_nongeo, by=c("KANTONSNUM" = "knr"))
ch_kw_installed <- ch %>%
mutate(kw_b2005 = sum(muns_kw_installed$kw_b2005, na.rm = TRUE),
kw_2005 = sum(muns_kw_installed$kw_2005, na.rm = TRUE),
kw_2006 = sum(muns_kw_installed$kw_2006, na.rm = TRUE),
kw_2007 = sum(muns_kw_installed$kw_2007, na.rm = TRUE),
kw_2008 = sum(muns_kw_installed$kw_2008, na.rm = TRUE),
kw_2009 = sum(muns_kw_installed$kw_2009, na.rm = TRUE),
kw_2010 = sum(muns_kw_installed$kw_2010, na.rm = TRUE),
kw_2011 = sum(muns_kw_installed$kw_2011, na.rm = TRUE),
kw_2012 = sum(muns_kw_installed$kw_2012, na.rm = TRUE),
kw_2013 = sum(muns_kw_installed$kw_2013, na.rm = TRUE),
kw_2014 = sum(muns_kw_installed$kw_2014, na.rm = TRUE),
kw_2015 = sum(muns_kw_installed$kw_2015, na.rm = TRUE),
kw_2016 = sum(muns_kw_installed$kw_2016, na.rm = TRUE),
kw_2017 = sum(muns_kw_installed$kw_2017, na.rm = TRUE),
kw_2018 = sum(muns_kw_installed$kw_2018, na.rm = TRUE),
kw_2019 = sum(muns_kw_installed$kw_2019, na.rm = TRUE),
kw_2020 = sum(muns_kw_installed$kw_2020, na.rm = TRUE),
kw_2021 = sum(muns_kw_installed$kw_2021, na.rm = TRUE),
kw_2022 = sum(muns_kw_installed$kw_2022, na.rm = TRUE)) %>%
mutate(kw_tot =
kw_b2005 +
kw_2005 +
kw_2006 +
kw_2007 +
kw_2008 +
kw_2009 +
kw_2010 +
kw_2011 +
kw_2012 +
kw_2013 +
kw_2014 +
kw_2015 +
kw_2016 +
kw_2017 +
kw_2018 +
kw_2019 +
kw_2020 +
kw_2021 +
kw_2022) %>%
select(NAME, EINWOHNERZ, starts_with("kw"))
# solar energy potential
potential_muns <- potentials %>%
inner_join(muns, by=c("MunicipalityNumber" = "BFS_NUMMER")) %>%
select(MunicipalityNumber,
knr,
Scenario1_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh) %>%
rename(p_rf = Scenario1_RoofsOnly_PotentialSolarElectricity_GWh,
p_rf_fac = Scenario3_RoofsFacades_PotentialSolarElectricity_GWh)
potential_cantons <- potential_muns %>%
group_by(knr) %>%
summarize(p_rf = sum(p_rf),
p_rf_fac = sum(p_rf_fac))
muns_installed_pot <- left_join(muns_kw_installed, potential_muns, by=c("BFS_NUMMER" = "MunicipalityNumber"))
cantons_installed_pot <- left_join(cantons_kw_installed, potential_cantons, by=c("KANTONSNUM" = "knr"))
ch_installed_pot <- ch_kw_installed %>%
mutate(p_rf = sum(potential_muns$p_rf),
p_rf_fac = sum(potential_muns$p_rf_fac))
# Joining the potential to the typology
typology_unproc <- left_join(typology_unproc, potentials, by=c("GDE_NO" = "MunicipalityNumber"))
potential_typ <- typology_unproc %>%
group_by(TYP) %>%
summarize(p_rf = sum(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh, na.rm=T),
p_rf_fac = sum(Scenario3_RoofsFacades_PotentialSolarElectricity_GWh, na.rm=T)
) %>%
st_drop_geometry()
typ_installed_pot <- left_join(typ_kw_installed, potential_typ, by="TYP")
# German --> English
type_names <- c("Big Centers", "Secondary Centers Of Big Centers", "Crown Big Centers", "Medium Centers", "Crown Medium Centers", "Small Centers", "Peri-urban Rural Communes", "Agricultural Communes", "Tourist Communes")
typ_installed_pot$name <- type_names
ch_installed_pot$NAME <- "Switzerland"
ch_installed_pot <- ch_installed_pot %>%
rename(name = NAME)
# kW --> kWh
# TO CLARIFY: what does this mean?
factor <- 950
ch_gwh_pot <- ch_installed_pot %>%
mutate(gwh_b2005 = kw_b2005 * factor / 1e6,
gwh_2005 = kw_2005 * factor / 1e6,
gwh_2006 = kw_2006 * factor / 1e6,
gwh_2007 = kw_2007 * factor / 1e6,
gwh_2008 = kw_2008 * factor / 1e6,
gwh_2009 = kw_2009 * factor / 1e6,
gwh_2010 = kw_2010 * factor / 1e6,
gwh_2011 = kw_2011 * factor / 1e6,
gwh_2012 = kw_2012 * factor / 1e6,
gwh_2013 = kw_2013 * factor / 1e6,
gwh_2014 = kw_2014 * factor / 1e6,
gwh_2015 = kw_2015 * factor / 1e6,
gwh_2016 = kw_2016 * factor / 1e6,
gwh_2017 = kw_2017 * factor / 1e6,
gwh_2018 = kw_2018 * factor / 1e6,
gwh_2019 = kw_2019 * factor / 1e6,
gwh_2020 = kw_2020 * factor / 1e6,
gwh_2021 = kw_2021 * factor / 1e6,
gwh_2022 = kw_2022 * factor / 1e6,
gwh_tot = kw_tot * factor / 1e6)
cantons_gwh_pot <- cantons_installed_pot %>%
mutate(gwh_b2005 = kw_b2005 * factor / 1e6,
gwh_2005 = kw_2005 * factor / 1e6,
gwh_2006 = kw_2006 * factor / 1e6,
gwh_2007 = kw_2007 * factor / 1e6,
gwh_2008 = kw_2008 * factor / 1e6,
gwh_2009 = kw_2009 * factor / 1e6,
gwh_2010 = kw_2010 * factor / 1e6,
gwh_2011 = kw_2011 * factor / 1e6,
gwh_2012 = kw_2012 * factor / 1e6,
gwh_2013 = kw_2013 * factor / 1e6,
gwh_2014 = kw_2014 * factor / 1e6,
gwh_2015 = kw_2015 * factor / 1e6,
gwh_2016 = kw_2016 * factor / 1e6,
gwh_2017 = kw_2017 * factor / 1e6,
gwh_2018 = kw_2018 * factor / 1e6,
gwh_2019 = kw_2019 * factor / 1e6,
gwh_2020 = kw_2020 * factor / 1e6,
gwh_2021 = kw_2021 * factor / 1e6,
gwh_2022 = kw_2022 * factor / 1e6,
gwh_tot = kw_tot * factor / 1e6)
typ_gwh_pot <- typ_installed_pot %>%
mutate(gwh_b2005 = kw_b2005 * factor / 1e6,
gwh_2005 = kw_2005 * factor / 1e6,
gwh_2006 = kw_2006 * factor / 1e6,
gwh_2007 = kw_2007 * factor / 1e6,
gwh_2008 = kw_2008 * factor / 1e6,
gwh_2009 = kw_2009 * factor / 1e6,
gwh_2010 = kw_2010 * factor / 1e6,
gwh_2011 = kw_2011 * factor / 1e6,
gwh_2012 = kw_2012 * factor / 1e6,
gwh_2013 = kw_2013 * factor / 1e6,
gwh_2014 = kw_2014 * factor / 1e6,
gwh_2015 = kw_2015 * factor / 1e6,
gwh_2016 = kw_2016 * factor / 1e6,
gwh_2017 = kw_2017 * factor / 1e6,
gwh_2018 = kw_2018 * factor / 1e6,
gwh_2019 = kw_2019 * factor / 1e6,
gwh_2020 = kw_2020 * factor / 1e6,
gwh_2021 = kw_2021 * factor / 1e6,
gwh_2022 = kw_2022 * factor / 1e6,
gwh_tot = kw_tot * factor / 1e6)
muns_gwh_pot <- muns_installed_pot %>%
mutate(gwh_b2005 = kw_b2005 * factor / 1e6,
gwh_2005 = kw_2005 * factor / 1e6,
gwh_2006 = kw_2006 * factor / 1e6,
gwh_2007 = kw_2007 * factor / 1e6,
gwh_2008 = kw_2008 * factor / 1e6,
gwh_2009 = kw_2009 * factor / 1e6,
gwh_2010 = kw_2010 * factor / 1e6,
gwh_2011 = kw_2011 * factor / 1e6,
gwh_2012 = kw_2012 * factor / 1e6,
gwh_2013 = kw_2013 * factor / 1e6,
gwh_2014 = kw_2014 * factor / 1e6,
gwh_2015 = kw_2015 * factor / 1e6,
gwh_2016 = kw_2016 * factor / 1e6,
gwh_2017 = kw_2017 * factor / 1e6,
gwh_2018 = kw_2018 * factor / 1e6,
gwh_2019 = kw_2019 * factor / 1e6,
gwh_2020 = kw_2020 * factor / 1e6,
gwh_2021 = kw_2021 * factor / 1e6,
gwh_2022 = kw_2022 * factor / 1e6,
gwh_tot = kw_tot * factor / 1e6)
# simplfiying geometry (sf)
#muns_installed_pot_simplified <- st_simplify(muns_gwh_pot, preserveTopology = T, dTolerance=250)
#cantons_installed_pot_simplified <- st_simplify(cantons_gwh_pot, preserveTopology = T, dTolerance=250)
#typ_installed_pot_simplified <- st_simplify(typ_gwh_pot, preserveTopology = T, dTolerance=250)
#ch_installed_pot_simplified <- st_simplify(ch_gwh_pot, preserveTopology = T, dTolerance=250)
# simplifying geometry (rmapshaper)
muns_installed_pot_simplified <- ms_simplify(muns_gwh_pot, keep_shapes = F, keep=0.01)
cantons_installed_pot_simplified <- ms_simplify(cantons_gwh_pot, keep_shapes = F, keep=0.01)
typ_installed_pot_simplified <- ms_simplify(typ_gwh_pot, keep_shapes = F, keep=0.01)
ch_installed_pot_simplified <- ms_simplify(ch_gwh_pot, keep_shapes = F, keep=0.01)
ggplot() +
geom_sf(data= muns_installed_pot_simplified, aes(fill=gwh_tot/p_rf_fac), lwd=0.1) +
theme_void()
# simplfiying geometry (sf)
#muns_installed_pot_simplified <- st_simplify(muns_gwh_pot, preserveTopology = T, dTolerance=250)
#cantons_installed_pot_simplified <- st_simplify(cantons_gwh_pot, preserveTopology = T, dTolerance=250)
#typ_installed_pot_simplified <- st_simplify(typ_gwh_pot, preserveTopology = T, dTolerance=250)
#ch_installed_pot_simplified <- st_simplify(ch_gwh_pot, preserveTopology = T, dTolerance=250)
# simplifying geometry (rmapshaper)
muns_installed_pot_simplified <- ms_simplify(muns_gwh_pot, keep_shapes = F, keep=0.001)
cantons_installed_pot_simplified <- ms_simplify(cantons_gwh_pot, keep_shapes = F, keep=0.001)
typ_installed_pot_simplified <- ms_simplify(typ_gwh_pot, keep_shapes = F, keep=0.001)
ch_installed_pot_simplified <- ms_simplify(ch_gwh_pot, keep_shapes = F, keep=0.001)
ggplot() +
geom_sf(data= muns_installed_pot_simplified, aes(fill=gwh_tot/p_rf_fac), lwd=0.1) +
theme_void()
# simplfiying geometry (sf)
#muns_installed_pot_simplified <- st_simplify(muns_gwh_pot, preserveTopology = T, dTolerance=250)
#cantons_installed_pot_simplified <- st_simplify(cantons_gwh_pot, preserveTopology = T, dTolerance=250)
#typ_installed_pot_simplified <- st_simplify(typ_gwh_pot, preserveTopology = T, dTolerance=250)
#ch_installed_pot_simplified <- st_simplify(ch_gwh_pot, preserveTopology = T, dTolerance=250)
# simplifying geometry (rmapshaper)
muns_installed_pot_simplified <- ms_simplify(muns_gwh_pot, keep_shapes = F, keep=0.0001)
cantons_installed_pot_simplified <- ms_simplify(cantons_gwh_pot, keep_shapes = F, keep=0.0001)
typ_installed_pot_simplified <- ms_simplify(typ_gwh_pot, keep_shapes = F, keep=0.0001)
ch_installed_pot_simplified <- ms_simplify(ch_gwh_pot, keep_shapes = F, keep=0.0001)
ggplot() +
geom_sf(data= muns_installed_pot_simplified, aes(fill=gwh_tot/p_rf_fac), lwd=0.1) +
theme_void()
# simplfiying geometry (sf)
#muns_installed_pot_simplified <- st_simplify(muns_gwh_pot, preserveTopology = T, dTolerance=250)
#cantons_installed_pot_simplified <- st_simplify(cantons_gwh_pot, preserveTopology = T, dTolerance=250)
#typ_installed_pot_simplified <- st_simplify(typ_gwh_pot, preserveTopology = T, dTolerance=250)
#ch_installed_pot_simplified <- st_simplify(ch_gwh_pot, preserveTopology = T, dTolerance=250)
# simplifying geometry (rmapshaper)
muns_installed_pot_simplified <- ms_simplify(muns_gwh_pot, keep_shapes = F, keep=0.001)
cantons_installed_pot_simplified <- ms_simplify(cantons_gwh_pot, keep_shapes = F, keep=0.001)
typ_installed_pot_simplified <- ms_simplify(typ_gwh_pot, keep_shapes = F, keep=0.001)
ch_installed_pot_simplified <- ms_simplify(ch_gwh_pot, keep_shapes = F, keep=0.001)
ggplot() +
geom_sf(data= muns_installed_pot_simplified, aes(fill=gwh_tot/p_rf_fac), lwd=0.1) +
theme_void()
ggplot() +
geom_sf(data= typ_installed_pot_simplified, aes(fill=gwh_tot/p_rf_fac), lwd=0.01) +
theme_void()
ggplot() +
geom_sf(data= cantons_installed_pot_simplified, aes(fill=gwh_tot/p_rf_fac), lwd=0.1) +
theme_void()
# simplfiying geometry (sf)
#muns_installed_pot_simplified <- st_simplify(muns_gwh_pot, preserveTopology = T, dTolerance=250)
#cantons_installed_pot_simplified <- st_simplify(cantons_gwh_pot, preserveTopology = T, dTolerance=250)
#typ_installed_pot_simplified <- st_simplify(typ_gwh_pot, preserveTopology = T, dTolerance=250)
#ch_installed_pot_simplified <- st_simplify(ch_gwh_pot, preserveTopology = T, dTolerance=250)
# simplifying geometry (rmapshaper)
muns_installed_pot_simplified <- ms_simplify(muns_gwh_pot, keep_shapes = F, keep=0.001)
cantons_installed_pot_simplified <- ms_simplify(cantons_gwh_pot, keep_shapes = F, keep=0.01)
typ_installed_pot_simplified <- ms_simplify(typ_gwh_pot, keep_shapes = F, keep=0.01)
ch_installed_pot_simplified <- ms_simplify(ch_gwh_pot, keep_shapes = F, keep=0.01)
ggplot() +
geom_sf(data= muns_installed_pot_simplified, aes(fill=gwh_tot/p_rf_fac), lwd=0.1) +
theme_void()
ggplot() +
geom_sf(data= typ_installed_pot_simplified, aes(fill=gwh_tot/p_rf_fac), lwd=0.01) +
theme_void()
ggplot() +
geom_sf(data= cantons_installed_pot_simplified, aes(fill=gwh_tot/p_rf_fac), lwd=0.1) +
theme_void()
# Saving processed data
#write.csv(muns_installed_pot %>% st_drop_geometry(), "processed_data/municipalities.csv")
#write.csv(cantons_installed_pot %>% st_drop_geometry(), "processed_data/cantons.csv")
#write.csv(typ_installed_pot %>% st_drop_geometry(), "processed_data/typology.csv")
#write.csv(ch_installed_pot %>% st_drop_geometry(), "processed_data/switzerland.csv")
# Saving spatial data as shapefiles
st_write(muns_installed_pot_simplified, "processed_data/municipalities/municipalities.shp")
st_write(cantons_installed_pot_simplified, "processed_data/cantons/cantons.shp")
st_write(typ_installed_pot_simplified, "processed_data/typology/typology.shp")
st_write(ch_installed_pot_simplified, "processed_data/switzerland/switzerland.shp")
# Check whether data was exported correctly
processed_muns <- st_transform(st_read("processed_data/municipalities/municipalities.shp"), crs=4326)
processed_cantons <-  st_transform(st_read("processed_data/cantons/cantons.shp"), crs=4326)
processed_typ <-  st_transform(st_read("processed_data/typology/typology.shp"), crs=4326)
processed_ch <-  st_transform(st_read("processed_data/switzerland/switzerland.shp"), crs=4326)
library(shiny); runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
knitr::opts_chunk$set(echo = TRUE)
# Check whether data was exported correctly
processed_muns <- st_transform(st_read("processed_data/municipalities/municipalities.shp"), crs=4326)
library(sf)
library(dplyr)
library(ggplot2)
library(data.table)
library(rmapshaper)
# Check whether data was exported correctly
processed_muns <- st_transform(st_read("processed_data/municipalities/municipalities.shp"), crs=4326)
processed_cantons <-  st_transform(st_read("processed_data/cantons/cantons.shp"), crs=4326)
# Check whether data was exported correctly
processed_muns <- st_transform(st_read("processed_data/municipalities/municipalities.shp"), crs=4326)
processed_cantons <-  st_transform(st_read("processed_data/cantons/cantons.shp"), crs=4326)
processed_typ <-  st_transform(st_read("processed_data/typology/typology.shp"), crs=4326)
processed_ch <-  st_transform(st_read("processed_data/switzerland/switzerland.shp"), crs=4326)
processed_muns$knr_x[1]
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(dplyr)
library(ggplot2)
library(data.table)
library(rmapshaper)
# Check whether data was exported correctly
processed_muns <- st_transform(st_read("processed_data/municipalities/municipalities.shp"), crs=4326)
processed_cantons <-  st_transform(st_read("processed_data/cantons/cantons.shp"), crs=4326)
# Check whether data was exported correctly
processed_muns <- st_transform(st_read("processed_data/municipalities/municipalities.shp"), crs=4326)
processed_cantons <-  st_transform(st_read("processed_data/cantons/cantons.shp"), crs=4326)
processed_typ <-  st_transform(st_read("processed_data/typology/typology.shp"), crs=4326)
processed_ch <-  st_transform(st_read("processed_data/switzerland/switzerland.shp"), crs=4326)
processed_cantons$KANTONSNUM
library(shiny); runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
?leafletOptions
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
zoom_lvls <- read.csv("processed_data/zoom_levels.csv")
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
muns <- st_transform(st_read("processed_data/municipalities/municipalities.shp"), crs=4326)
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
?addPolygons
runApp('geo454_solar_energy_zoom_test.R')
?setOpacity
?groupOptions
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
?addPolygons
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
cantons <-  st_transform(st_read("processed_data/cantons/cantons.shp"), crs=4326)
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
?palette
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
?addPolygons
runApp('geo454_solar_energy_zoom_test.R')
?highlightOptions
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
runApp('geo454_solar_energy_zoom_test.R')
library(shiny); runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
cantons <-  st_transform(st_read("processed_data/cantons/cantons.shp"), crs=4326)
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
runApp('geo454_solar_energy.R')
