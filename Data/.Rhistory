left_join(muns_2014, by="BFS_NUMMER") %>%
left_join(muns_2015, by="BFS_NUMMER") %>%
left_join(muns_2016, by="BFS_NUMMER") %>%
left_join(muns_2017, by="BFS_NUMMER") %>%
left_join(muns_2018, by="BFS_NUMMER") %>%
left_join(muns_2019, by="BFS_NUMMER") %>%
left_join(muns_2020, by="BFS_NUMMER") %>%
left_join(muns_2021, by="BFS_NUMMER") %>%
left_join(muns_2022, by="BFS_NUMMER")
muns_kw_installed <- muns_kw_installed %>%
mutate(installed_kw_total =
installed_kw_before2005+
installed_kw_2005 +
installed_kw_2006 +
installed_kw_2007 +
installed_kw_2008 +
installed_kw_2009 +
installed_kw_2010 +
installed_kw_2011 +
installed_kw_2012 +
installed_kw_2013 +
installed_kw_2014 +
installed_kw_2015 +
installed_kw_2016 +
installed_kw_2017 +
installed_kw_2018 +
installed_kw_2019 +
installed_kw_2020 +
installed_kw_2021 +
installed_kw_2022)
# turning polygons to points
#muns_kw_installed_point <- muns_kw_installed %>%
#  mutate(x = st_coordinates(st_centroid(.))[,1]) %>%
#  mutate(y = st_coordinates(st_centroid(.))[,2]) %>%
#  st_drop_geometry() %>%
#  st_as_sf(.,coords=c("x", "y"), crs=2056)
# summing the results to cantons
cantons_kw_installed_nongeo <- muns_kw_installed %>%
group_by(KANTONSNUM) %>%
summarize(installed_kw_before2005 = sum(installed_kw_before2005, na.rm = TRUE),
installed_kw_2005 = sum(installed_kw_2005, na.rm = TRUE),
installed_kw_2006 = sum(installed_kw_2006, na.rm = TRUE),
installed_kw_2007 = sum(installed_kw_2007, na.rm = TRUE),
installed_kw_2008 = sum(installed_kw_2008, na.rm = TRUE),
installed_kw_2009 = sum(installed_kw_2009, na.rm = TRUE),
installed_kw_2010 = sum(installed_kw_2010, na.rm = TRUE),
installed_kw_2011 = sum(installed_kw_2011, na.rm = TRUE),
installed_kw_2012 = sum(installed_kw_2012, na.rm = TRUE),
installed_kw_2013 = sum(installed_kw_2013, na.rm = TRUE),
installed_kw_2014 = sum(installed_kw_2014, na.rm = TRUE),
installed_kw_2015 = sum(installed_kw_2015, na.rm = TRUE),
installed_kw_2016 = sum(installed_kw_2016, na.rm = TRUE),
installed_kw_2017 = sum(installed_kw_2017, na.rm = TRUE),
installed_kw_2018 = sum(installed_kw_2018, na.rm = TRUE),
installed_kw_2019 = sum(installed_kw_2019, na.rm = TRUE),
installed_kw_2020 = sum(installed_kw_2020, na.rm = TRUE),
installed_kw_2021 = sum(installed_kw_2021, na.rm = TRUE),
installed_kw_2022 = sum(installed_kw_2022, na.rm = TRUE)
) %>%
mutate(installed_kw_total =
installed_kw_before2005+
installed_kw_2005 +
installed_kw_2006 +
installed_kw_2007 +
installed_kw_2008 +
installed_kw_2009 +
installed_kw_2010 +
installed_kw_2011 +
installed_kw_2012 +
installed_kw_2013 +
installed_kw_2014 +
installed_kw_2015 +
installed_kw_2016 +
installed_kw_2017 +
installed_kw_2018 +
installed_kw_2019 +
installed_kw_2020 +
installed_kw_2021 +
installed_kw_2022) %>%
st_drop_geometry()
# turning polygons to points
#muns_kw_installed_point <- muns_kw_installed %>%
#  mutate(x = st_coordinates(st_centroid(.))[,1]) %>%
#  mutate(y = st_coordinates(st_centroid(.))[,2]) %>%
#  st_drop_geometry() %>%
#  st_as_sf(.,coords=c("x", "y"), crs=2056)
# summing the results to cantons
cantons_kw_installed_nongeo <- muns_kw_installed %>%
group_by(knr) %>%
summarize(installed_kw_before2005 = sum(installed_kw_before2005, na.rm = TRUE),
installed_kw_2005 = sum(installed_kw_2005, na.rm = TRUE),
installed_kw_2006 = sum(installed_kw_2006, na.rm = TRUE),
installed_kw_2007 = sum(installed_kw_2007, na.rm = TRUE),
installed_kw_2008 = sum(installed_kw_2008, na.rm = TRUE),
installed_kw_2009 = sum(installed_kw_2009, na.rm = TRUE),
installed_kw_2010 = sum(installed_kw_2010, na.rm = TRUE),
installed_kw_2011 = sum(installed_kw_2011, na.rm = TRUE),
installed_kw_2012 = sum(installed_kw_2012, na.rm = TRUE),
installed_kw_2013 = sum(installed_kw_2013, na.rm = TRUE),
installed_kw_2014 = sum(installed_kw_2014, na.rm = TRUE),
installed_kw_2015 = sum(installed_kw_2015, na.rm = TRUE),
installed_kw_2016 = sum(installed_kw_2016, na.rm = TRUE),
installed_kw_2017 = sum(installed_kw_2017, na.rm = TRUE),
installed_kw_2018 = sum(installed_kw_2018, na.rm = TRUE),
installed_kw_2019 = sum(installed_kw_2019, na.rm = TRUE),
installed_kw_2020 = sum(installed_kw_2020, na.rm = TRUE),
installed_kw_2021 = sum(installed_kw_2021, na.rm = TRUE),
installed_kw_2022 = sum(installed_kw_2022, na.rm = TRUE)
) %>%
mutate(installed_kw_total =
installed_kw_before2005+
installed_kw_2005 +
installed_kw_2006 +
installed_kw_2007 +
installed_kw_2008 +
installed_kw_2009 +
installed_kw_2010 +
installed_kw_2011 +
installed_kw_2012 +
installed_kw_2013 +
installed_kw_2014 +
installed_kw_2015 +
installed_kw_2016 +
installed_kw_2017 +
installed_kw_2018 +
installed_kw_2019 +
installed_kw_2020 +
installed_kw_2021 +
installed_kw_2022) %>%
st_drop_geometry()
cantons_kw_installed <- left_join(cantons, cantons_kw_installed_nongeo, by="KANTONSNUM")
# turning polygons to points
#muns_kw_installed_point <- muns_kw_installed %>%
#  mutate(x = st_coordinates(st_centroid(.))[,1]) %>%
#  mutate(y = st_coordinates(st_centroid(.))[,2]) %>%
#  st_drop_geometry() %>%
#  st_as_sf(.,coords=c("x", "y"), crs=2056)
# summing the results to cantons
cantons_kw_installed_nongeo <- muns_kw_installed %>%
group_by(knr) %>%
summarize(installed_kw_before2005 = sum(installed_kw_before2005, na.rm = TRUE),
installed_kw_2005 = sum(installed_kw_2005, na.rm = TRUE),
installed_kw_2006 = sum(installed_kw_2006, na.rm = TRUE),
installed_kw_2007 = sum(installed_kw_2007, na.rm = TRUE),
installed_kw_2008 = sum(installed_kw_2008, na.rm = TRUE),
installed_kw_2009 = sum(installed_kw_2009, na.rm = TRUE),
installed_kw_2010 = sum(installed_kw_2010, na.rm = TRUE),
installed_kw_2011 = sum(installed_kw_2011, na.rm = TRUE),
installed_kw_2012 = sum(installed_kw_2012, na.rm = TRUE),
installed_kw_2013 = sum(installed_kw_2013, na.rm = TRUE),
installed_kw_2014 = sum(installed_kw_2014, na.rm = TRUE),
installed_kw_2015 = sum(installed_kw_2015, na.rm = TRUE),
installed_kw_2016 = sum(installed_kw_2016, na.rm = TRUE),
installed_kw_2017 = sum(installed_kw_2017, na.rm = TRUE),
installed_kw_2018 = sum(installed_kw_2018, na.rm = TRUE),
installed_kw_2019 = sum(installed_kw_2019, na.rm = TRUE),
installed_kw_2020 = sum(installed_kw_2020, na.rm = TRUE),
installed_kw_2021 = sum(installed_kw_2021, na.rm = TRUE),
installed_kw_2022 = sum(installed_kw_2022, na.rm = TRUE)
) %>%
mutate(installed_kw_total =
installed_kw_before2005+
installed_kw_2005 +
installed_kw_2006 +
installed_kw_2007 +
installed_kw_2008 +
installed_kw_2009 +
installed_kw_2010 +
installed_kw_2011 +
installed_kw_2012 +
installed_kw_2013 +
installed_kw_2014 +
installed_kw_2015 +
installed_kw_2016 +
installed_kw_2017 +
installed_kw_2018 +
installed_kw_2019 +
installed_kw_2020 +
installed_kw_2021 +
installed_kw_2022) %>%
st_drop_geometry()
cantons_kw_installed <- left_join(cantons, cantons_kw_installed_nongeo, by=c("KANTONSNUM" = "knr"))
ch_kw_installed <- ch %>%
mutate(installed_kw_before2005 = sum(muns_kw_installed$installed_kw_before2005, na.rm = TRUE),
installed_kw_2005 = sum(muns_kw_installed$installed_kw_2005, na.rm = TRUE),
installed_kw_2006 = sum(muns_kw_installed$installed_kw_2006, na.rm = TRUE),
installed_kw_2007 = sum(muns_kw_installed$installed_kw_2007, na.rm = TRUE),
installed_kw_2008 = sum(muns_kw_installed$installed_kw_2008, na.rm = TRUE),
installed_kw_2009 = sum(muns_kw_installed$installed_kw_2009, na.rm = TRUE),
installed_kw_2010 = sum(muns_kw_installed$installed_kw_2010, na.rm = TRUE),
installed_kw_2011 = sum(muns_kw_installed$installed_kw_2011, na.rm = TRUE),
installed_kw_2012 = sum(muns_kw_installed$installed_kw_2012, na.rm = TRUE),
installed_kw_2013 = sum(muns_kw_installed$installed_kw_2013, na.rm = TRUE),
installed_kw_2014 = sum(muns_kw_installed$installed_kw_2014, na.rm = TRUE),
installed_kw_2015 = sum(muns_kw_installed$installed_kw_2015, na.rm = TRUE),
installed_kw_2016 = sum(muns_kw_installed$installed_kw_2016, na.rm = TRUE),
installed_kw_2017 = sum(muns_kw_installed$installed_kw_2017, na.rm = TRUE),
installed_kw_2018 = sum(muns_kw_installed$installed_kw_2018, na.rm = TRUE),
installed_kw_2019 = sum(muns_kw_installed$installed_kw_2019, na.rm = TRUE),
installed_kw_2020 = sum(muns_kw_installed$installed_kw_2020, na.rm = TRUE),
installed_kw_2021 = sum(muns_kw_installed$installed_kw_2021, na.rm = TRUE),
installed_kw_2022 = sum(muns_kw_installed$installed_kw_2022, na.rm = TRUE)) %>%
mutate(installed_kw_total =
installed_kw_before2005+
installed_kw_2005 +
installed_kw_2006 +
installed_kw_2007 +
installed_kw_2008 +
installed_kw_2009 +
installed_kw_2010 +
installed_kw_2011 +
installed_kw_2012 +
installed_kw_2013 +
installed_kw_2014 +
installed_kw_2015 +
installed_kw_2016 +
installed_kw_2017 +
installed_kw_2018 +
installed_kw_2019 +
installed_kw_2020 +
installed_kw_2021 +
installed_kw_2022) %>%
select(NAME, EINWOHNERZ, starts_with("installed_kw"))
sum(muns_kw_installed$installed_kw_total)
sum(cantons_kw_installed$installed_kw_total)
sum(ch_kw_installed$installed_kw_total)
ggplot() +
geom_sf(data= muns_kw_installed, aes(fill=installed_kw_total)) +
theme_void()
ggplot() +
geom_sf(data= muns_kw_installed, aes(fill=installed_kw_total/pop)) +
theme_void()
ggplot() +
geom_sf(data= muns_kw_installed, aes(fill=installed_kw_total/pop), lwd=0.1) +
theme_void()
ggplot() +
geom_sf(data= cantons_kw_installed, aes(fill=installed_kw_total/pop), lwd=0.1) +
theme_void()
# potential
potential_knr <- potentials %>%
inner_join(muns, by=c("MunicipalityNumber" = "BFS_NUMMER")) %>%
select(MunicipalityNumber,
Scenario1_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh,
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh)
# potential
potential_knr <- potentials %>%
inner_join(muns, by=c("MunicipalityNumber" = "BFS_NUMMER")) %>%
select(MunicipalityNumber,
KANTONSNUM,
Scenario1_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh,
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh)
# potential
potential_knr <- potentials %>%
inner_join(muns, by=c("MunicipalityNumber" = "BFS_NUMMER")) %>%
select(MunicipalityNumber,
knr,
Scenario1_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh,
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh)
# potential
potential_muns <- potentials %>%
inner_join(muns, by=c("MunicipalityNumber" = "BFS_NUMMER")) %>%
select(MunicipalityNumber,
knr,
Scenario1_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh,
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh)
potential_cantons <- potential_muns %>%
group_by(knr) %>%
summarize(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh = sum(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh = sum(Scenario2_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh = sum(Scenario3_RoofsFacades_PotentialSolarElectricity_GWh),
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh = sum(Scenario4_RoofsFacades_PotentialSolarElectricity_GWh))
muns_installed_pot <- left_join(muns_kw_installed, potential_muns, by=c("BFS_NUMMER" = "MunicipalityNumber"))
cantons_installed_pot <- left_join(cantons_kw_installed, potential_cantons, by=c("KANTONSNUM", "knr"))
# potential
potential_muns <- potentials %>%
inner_join(muns, by=c("MunicipalityNumber" = "BFS_NUMMER")) %>%
select(MunicipalityNumber,
knr,
Scenario1_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh,
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh)
potential_cantons <- potential_muns %>%
group_by(knr) %>%
summarize(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh = sum(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh = sum(Scenario2_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh = sum(Scenario3_RoofsFacades_PotentialSolarElectricity_GWh),
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh = sum(Scenario4_RoofsFacades_PotentialSolarElectricity_GWh))
muns_installed_pot <- left_join(muns_kw_installed, potential_muns, by=c("BFS_NUMMER" = "MunicipalityNumber"))
cantons_installed_pot <- left_join(cantons_kw_installed, potential_cantons, by=c("KANTONSNUM" = "knr"))
# potential
potential_muns <- potentials %>%
inner_join(muns, by=c("MunicipalityNumber" = "BFS_NUMMER")) %>%
select(MunicipalityNumber,
knr,
Scenario1_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh,
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh)
potential_cantons <- potential_muns %>%
group_by(knr) %>%
summarize(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh = sum(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh = sum(Scenario2_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh = sum(Scenario3_RoofsFacades_PotentialSolarElectricity_GWh),
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh = sum(Scenario4_RoofsFacades_PotentialSolarElectricity_GWh))
muns_installed_pot <- left_join(muns_kw_installed, potential_muns, by=c("BFS_NUMMER" = "MunicipalityNumber"))
cantons_installed_pot <- left_join(cantons_kw_installed, potential_cantons, by=c("KANTONSNUM" = "knr"))
ch_installed_pot <- ch_kw_installed %>%
mutate(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh = sum(potentials$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh = sum(potentials$Scenario2_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh = sum(potentials$Scenario3_RoofsFacades_PotentialSolarElectricity_GWh),
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh = sum(potentials$Scenario4_RoofsFacades_PotentialSolarElectricity_GWh))
ggplot() +
geom_sf(data= muns_installed_pot, aes(fill=installed_kw_total/pop), lwd=0.1) +
theme_void()
ggplot() +
geom_sf(data= cantons_installed_pot, aes(fill=installed_kw_total/pop), lwd=0.1) +
theme_void()
sum(potentials$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh)
sum(muns_installed_pot$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh)
sum(cantons_installed_pot$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh)
sum(ch_installed_pot$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh)
# potential
potential_muns <- potentials %>%
inner_join(muns, by=c("MunicipalityNumber" = "BFS_NUMMER")) %>%
select(MunicipalityNumber,
knr,
Scenario1_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh,
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh,
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh)
potential_cantons <- potential_muns %>%
group_by(knr) %>%
summarize(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh = sum(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh = sum(Scenario2_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh = sum(Scenario3_RoofsFacades_PotentialSolarElectricity_GWh),
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh = sum(Scenario4_RoofsFacades_PotentialSolarElectricity_GWh))
muns_installed_pot <- left_join(muns_kw_installed, potential_muns, by=c("BFS_NUMMER" = "MunicipalityNumber"))
cantons_installed_pot <- left_join(cantons_kw_installed, potential_cantons, by=c("KANTONSNUM" = "knr"))
ch_installed_pot <- ch_kw_installed %>%
mutate(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh = sum(potential_muns$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario2_RoofsOnly_PotentialSolarElectricity_GWh = sum(potential_muns$Scenario2_RoofsOnly_PotentialSolarElectricity_GWh),
Scenario3_RoofsFacades_PotentialSolarElectricity_GWh = sum(potential_muns$Scenario3_RoofsFacades_PotentialSolarElectricity_GWh),
Scenario4_RoofsFacades_PotentialSolarElectricity_GWh = sum(potential_muns$Scenario4_RoofsFacades_PotentialSolarElectricity_GWh))
sum(ch_installed_pot$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh)
potentials %>% filter(is.na(Canton))
potentials %>% filter(Country == "LI")
potentials %>% filter(Country == "LI") %>% summarize(n = sum(Scenario1_RoofsOnly_PotentialSolarElectricity_GWh))
64701.74 - 356.85
ggplot() +
geom_sf(data= muns_installed_pot, aes(fill=Scenario1_RoofsOnly_PotentialSolarElectricity_GWh), lwd=0.1) +
theme_void()
ggplot() +
geom_sf(data= muns_installed_pot, aes(fill=Scenario1_RoofsOnly_PotentialSolarElectricity_GWh), lwd=0.01) +
theme_void()
ggplot() +
geom_sf(data= cantons_installed_pot, aes(fill=Scenario1_RoofsOnly_PotentialSolarElectricity_GWh), lwd=0.01) +
theme_void()
sum(ch_installed_pot$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh)
sum(cantons_installed_pot$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh)
sum(muns_installed_pot$Scenario1_RoofsOnly_PotentialSolarElectricity_GWh)
shinyApp(ui, server)
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points")
)
server <- function(input, output, session) {
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points())
})
}
shinyApp(ui, server)
install.packages("shiny")
install.packages("shiny")
library(shiny); runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
?p()
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
plot(ch[,1])
ch <- st_transform(read_sf("unprocessed_data/boundaries/Switzerland/switzerland.shp"), crs=4326)
cantons <- st_transform(read_sf("unprocessed_data/boundaries/Cantons/cantons.shp"), crs=4326)
library(leaflet)
library(sf)
muns <- st_transform(read_sf("unprocessed_data/boundaries/Municipalities/municipalities.shp"), crs=4326)
cantons <- st_transform(read_sf("unprocessed_data/boundaries/Cantons/cantons.shp"), crs=4326)
ch <- st_transform(read_sf("unprocessed_data/boundaries/Switzerland/switzerland.shp"), crs=4326)
knitr::opts_chunk$set(echo = TRUE)
# Loading the data
ch <- read_sf("unprocessed_data/boundaries/Switzerland/switzerland.shp")
cantons_unproc <- read_sf("unprocessed_data/boundaries/Cantons/cantons.shp")
muns_unproc <- read_sf("unprocessed_data/boundaries/Municipalities/municipalities.shp")
ele_prod_plants_csv <- read.csv("unprocessed_data/ElectricityProductionPlant.csv")
potentials <- read.csv("unprocessed_data/Solarenergiepotenziale_Gemeinden_Daecher_und_Fassaden.csv")
gdeverzeichnis <- read.csv("unprocessed_data/help/PLZO_CSV_LV95.csv", sep=";")
read_sf("unprocessed_data/boundaries/Switzerland/switzerland.shp")
ch <- read_sf("unprocessed_data/boundaries/Switzerland/switzerland.shp")
getwd()
print(getwd())
print(getwd())
ch <- read_sf(here("unprocessed_data","boundaries","Switzerland","switzerland.shp"))
library(leaflet)
library(here)
library(shiny); runApp('Documents/GitHub/GEO454/Data/rshiny_test.R')
library(shiny); runApp('rshiny_test.R')
knitr::opts_chunk$set(echo = TRUE)
# Loading the data
ch <- read_sf("unprocessed_data/boundaries/Switzerland/switzerland.shp")
library(sf)
library(dplyr)
library(ggplot2)
# Loading the data
ch <- read_sf("unprocessed_data/boundaries/Switzerland/switzerland.shp")
cantons_unproc <- read_sf("unprocessed_data/boundaries/Cantons/cantons.shp")
muns_unproc <- read_sf("unprocessed_data/boundaries/Municipalities/municipalities.shp")
typology_unproc <- read_sf("unprocessed_data/boundaries/Typology/mun_typology")
# Loading the data
ch <- read_sf("unprocessed_data/boundaries/Switzerland/switzerland.shp")
cantons_unproc <- read_sf("unprocessed_data/boundaries/Cantons/cantons.shp")
muns_unproc <- read_sf("unprocessed_data/boundaries/Municipalities/municipalities.shp")
typology_unproc <- read_sf("unprocessed_data/boundaries/Typology/mun_typology.shp")
ele_prod_plants_csv <- read.csv("unprocessed_data/ElectricityProductionPlant.csv")
potentials <- read.csv("unprocessed_data/Solarenergiepotenziale_Gemeinden_Daecher_und_Fassaden.csv")
gdeverzeichnis <- read.csv("unprocessed_data/help/PLZO_CSV_LV95.csv", sep=";")
# Creating multipart features from single-part features of boundaries
cantons <- cantons_unproc %>%
group_by(KANTONSNUM) %>%
summarize(name=max(NAME), pop=sum(EINWOHNERZ), geometry = st_union(geometry))
muns <- muns_unproc %>%
# removing municipalities in Liechtenstein
filter(BFS_NUMMER < 7000) %>%
group_by(BFS_NUMMER) %>%
summarize(name=max(NAME), knr = max(KANTONSNUM), pop=sum(EINWOHNERZ), geometry = st_union(geometry))
typ <- typology_unproc %>%
group_by(TYP) %>%
summarize(name=max(NAME), geometry = st_union(geometry))
muns <- st_transform(muns, 2056)
cantons <- st_transform(cantons, 2056)
typ <- st_transform(typ, 2056)
plot(typ[,1])
plot(typ[,2])
library(shiny); runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
?selectInput
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
?st_filter
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
runApp('rshiny_test.R')
